// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Muhammad Febrian Ardiansyah",
            "email": "mfardiansyah.id@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Generate access token for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "This API authenticates user login",
                "parameters": [
                    {
                        "description": "please fill in the username and password",
                        "name": "credential",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/auth.LoginData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK response",
                        "schema": {
                            "$ref": "#/definitions/httputil.Response"
                        }
                    },
                    "400": {
                        "description": "bad request (incorrect credential, duplicate username, etc)",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrResponse"
                        }
                    },
                    "412": {
                        "description": "error response",
                        "schema": {
                            "$ref": "#/definitions/httputil.ErrResponse"
                        }
                    }
                }
            }
        },
        "/public/service-id": {
            "get": {
                "description": "Tells the service ID of this service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "This API can be used as health check for this application",
                "responses": {
                    "200": {
                        "description": "api response",
                        "schema": {
                            "$ref": "#/definitions/httputil.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginData": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "httputil.ErrResponse": {
            "type": "object",
            "properties": {
                "error": {},
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "httputil.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "status": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Sample API Service",
	Description:      "Sample API Service implements RESTful API\nThis is the second description",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
